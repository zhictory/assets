{"remainingRequest":"C:\\Users\\Randolf Zhang\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Randolf Zhang\\Desktop\\华为开发\\assets\\vue\\src\\components\\Progress.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Randolf Zhang\\Desktop\\华为开发\\assets\\vue\\src\\components\\Progress.vue","mtime":1644761962130},{"path":"C:\\Users\\Randolf Zhang\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Randolf Zhang\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Randolf Zhang\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Randolf Zhang\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdQcm9ncmVzcycsDQogIHByb3BzOiB7DQogICAgcHJvZ3Jlc3M6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiB0cnVlLA0KICAgIH0sDQogICAgcHJvZ3Jlc3NPcHRpb246IHsNCiAgICAgIHR5cGU6IE9iamVjdCwNCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsgfSwNCiAgICB9LA0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGFyY0FyciAoKSB7DQogICAgICBsZXQgY2lyY2xlTGVuZ3RoID0gTWF0aC5mbG9vcigyICogTWF0aC5QSSAqIHRoaXMub3B0aW9uLnJhZGl1cykNCiAgICAgIGxldCBwcm9ncmVzc0xlbmd0aCA9IHRoaXMucHJvZ3Jlc3MgKiBjaXJjbGVMZW5ndGgNCiAgICAgIGNvbnN0IHN0ZXAgPSB0aGlzLm9wdGlvbi5zdGVwIC8vIOiuvue9ruWIsDEwMOWImeW3sue7j+avlOi+g+mavueci+WHuuadpeminOiJsuaWreWxgg0KICAgICAgY29uc3QgZ3JhZGllbnRDb2xvciA9IChzdGFydFJHQiwgZW5kUkdCLCBzdGVwKSA9PiB7DQogICAgICAgIGxldCBzdGFydFIgPSBzdGFydFJHQlswXQ0KICAgICAgICBsZXQgc3RhcnRHID0gc3RhcnRSR0JbMV0NCiAgICAgICAgbGV0IHN0YXJ0QiA9IHN0YXJ0UkdCWzJdDQogICAgICAgIGxldCBlbmRSID0gZW5kUkdCWzBdDQogICAgICAgIGxldCBlbmRHID0gZW5kUkdCWzFdDQogICAgICAgIGxldCBlbmRCID0gZW5kUkdCWzJdDQogICAgICAgIGxldCBzUiA9IChlbmRSIC0gc3RhcnRSKSAvIHN0ZXAgLy8g5oC75beu5YC8DQogICAgICAgIGxldCBzRyA9IChlbmRHIC0gc3RhcnRHKSAvIHN0ZXANCiAgICAgICAgbGV0IHNCID0gKGVuZEIgLSBzdGFydEIpIC8gc3RlcA0KICAgICAgICBsZXQgY29sb3JBcnIgPSBbXQ0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ZXA7IGkrKykgew0KICAgICAgICAgIGxldCBjb2xvciA9IGByZ2IoJHtzUiAqIGkgKyBzdGFydFJ9LCR7c0cgKiBpICsgc3RhcnRHfSwke3NCICogaSArIHN0YXJ0Qn0pYA0KICAgICAgICAgIGNvbG9yQXJyLnB1c2goY29sb3IpDQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIGNvbG9yQXJyDQogICAgICB9DQogICAgICBsZXQgY29sb3JBcnIgPSBncmFkaWVudENvbG9yKHRoaXMub3B0aW9uLnN0YXJ0Q29sb3IsIHRoaXMub3B0aW9uLmVuZENvbG9yLCBzdGVwKQ0KICAgICAgLy8g6K6h566X5q+P5Liq5q2l6L+b5Lit55qE5byn6ZW/DQogICAgICBsZXQgYXJjTGVuZ3RoQXJyID0gY29sb3JBcnIubWFwKChjb2xvciwgaW5kZXgpID0+ICh7DQogICAgICAgIGFyY0xlbmd0aDogYCR7aW5kZXggKiAocHJvZ3Jlc3NMZW5ndGggLyBzdGVwKX0sMTAwMDAwMDAwYCwNCiAgICAgICAgY29sb3I6IGNvbG9yDQogICAgICB9KSkNCiAgICAgIGFyY0xlbmd0aEFyci5yZXZlcnNlKCkNCiAgICAgIHJldHVybiBhcmNMZW5ndGhBcnINCiAgICB9LA0KICAgIG9wdGlvbiAoKSB7DQogICAgICAvLyDmiYDmnInov5vluqbmnaHnmoTlj6/phY3nva7pobkNCiAgICAgIGxldCBiYXNlT3B0aW9uID0gew0KICAgICAgICByYWRpdXM6IDEwMCwNCiAgICAgICAgc3Ryb2tlV2lkdGg6IDIwLA0KICAgICAgICBiYWNrQ29sb3I6ICcjRTZFNkU2JywNCiAgICAgICAgc3RhcnRDb2xvcjogWzI0OSwgMjIxLCAxODBdLA0KICAgICAgICBlbmRDb2xvcjogWzIzOCwgMTcxLCA4Nl0sDQogICAgICAgIGR1cnRpb246ICcxcycsDQogICAgICAgIHN0ZXA6IDEwMCwNCiAgICAgIH0NCiAgICAgIE9iamVjdC5hc3NpZ24oYmFzZU9wdGlvbiwgdGhpcy5wcm9ncmVzc09wdGlvbikNCiAgICAgIC8vIOS4reW/g+S9jee9ruiHquWKqOeUn+aIkA0KICAgICAgYmFzZU9wdGlvbi5jeSA9IGJhc2VPcHRpb24uY3ggPSBiYXNlT3B0aW9uLnJhZGl1cyArIGJhc2VPcHRpb24uc3Ryb2tlV2lkdGgNCiAgICAgIGJhc2VPcHRpb24uc2l6ZSA9IChiYXNlT3B0aW9uLnJhZGl1cyArIGJhc2VPcHRpb24uc3Ryb2tlV2lkdGgpICogMg0KICAgICAgcmV0dXJuIGJhc2VPcHRpb24NCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["Progress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Progress.vue","sourceRoot":"components","sourcesContent":["<template>\r\n  <svg\r\n    :height=\"option.size\"\r\n    :width=\"option.size\"\r\n    x-mlns=\"http://www.w3.org/200/svg\"\r\n  >\r\n    <circle\r\n      :r=\"option.radius\"\r\n      :cx=\"option.cx\"\r\n      :cy=\"option.cy\"\r\n      :stroke=\"option.backColor\"\r\n      :stroke-width=\"option.strokeWidth\"\r\n      fill=\"none\"\r\n    />\r\n    <circle\r\n      v-for=\"(item, index) in arcArr\"\r\n      :key=\"index\"\r\n      :r=\"option.radius\"\r\n      :cx=\"option.cx\"\r\n      :cy=\"option.cy\"\r\n      :stroke=\"item.color\"\r\n      :stroke-width=\"option.strokeWidth\"\r\n      fill=\"none\"\r\n      transform=\"rotate(-90)\"\r\n      transform-origin=\"center\"\r\n      stroke-linecap=\"round\"\r\n    >\r\n      <animate\r\n        :to=\"item.arcLength\"\r\n        begin=\"0s\"\r\n        :dur=\"option.durtion\"\r\n        from=\"0,1000000\"\r\n        attributeName=\"stroke-dasharray\"\r\n        fill=\"freeze\"\r\n      />\r\n    </circle>\r\n  </svg>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'Progress',\r\n  props: {\r\n    progress: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    progressOption: {\r\n      type: Object,\r\n      default: () => { },\r\n    },\r\n  },\r\n  computed: {\r\n    arcArr () {\r\n      let circleLength = Math.floor(2 * Math.PI * this.option.radius)\r\n      let progressLength = this.progress * circleLength\r\n      const step = this.option.step // 设置到100则已经比较难看出来颜色断层\r\n      const gradientColor = (startRGB, endRGB, step) => {\r\n        let startR = startRGB[0]\r\n        let startG = startRGB[1]\r\n        let startB = startRGB[2]\r\n        let endR = endRGB[0]\r\n        let endG = endRGB[1]\r\n        let endB = endRGB[2]\r\n        let sR = (endR - startR) / step // 总差值\r\n        let sG = (endG - startG) / step\r\n        let sB = (endB - startB) / step\r\n        let colorArr = []\r\n        for (let i = 0; i < step; i++) {\r\n          let color = `rgb(${sR * i + startR},${sG * i + startG},${sB * i + startB})`\r\n          colorArr.push(color)\r\n        }\r\n        return colorArr\r\n      }\r\n      let colorArr = gradientColor(this.option.startColor, this.option.endColor, step)\r\n      // 计算每个步进中的弧长\r\n      let arcLengthArr = colorArr.map((color, index) => ({\r\n        arcLength: `${index * (progressLength / step)},100000000`,\r\n        color: color\r\n      }))\r\n      arcLengthArr.reverse()\r\n      return arcLengthArr\r\n    },\r\n    option () {\r\n      // 所有进度条的可配置项\r\n      let baseOption = {\r\n        radius: 100,\r\n        strokeWidth: 20,\r\n        backColor: '#E6E6E6',\r\n        startColor: [249, 221, 180],\r\n        endColor: [238, 171, 86],\r\n        durtion: '1s',\r\n        step: 100,\r\n      }\r\n      Object.assign(baseOption, this.progressOption)\r\n      // 中心位置自动生成\r\n      baseOption.cy = baseOption.cx = baseOption.radius + baseOption.strokeWidth\r\n      baseOption.size = (baseOption.radius + baseOption.strokeWidth) * 2\r\n      return baseOption\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}